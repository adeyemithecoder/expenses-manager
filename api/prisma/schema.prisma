generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  username String     @unique
  password String
  name     String
  gender   String?
  Expense  Expense[]
  Category Category[]
  Income   Income[]
  Budget   Budget[]
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Expense   Expense[]
  Budget    Budget[]
  Income    Income[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([name, userId])
}

model Expense {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  amount      Float
  categoryId  String   @db.ObjectId
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  description String
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Income {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  amount     Float
  source     String
  date       DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Budget {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  amount     Float
  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum TransactionCategory {
  // Expenses Categories
  FOOD
  TRANSPORT
  ENTERTAINMENT
  HEALTH
  EDUCATION
  UTILITIES
  CLOTHING
  HOUSING
  LEISURE
  TECHNOLOGY
  TRAVEL
  SAVINGS
  OTHERS

  // Income Categories
  SALARY
  BUSINESS
  INVESTMENTS
  FREELANCE
  GIFTS
  OTHER_INCOME
}
